Router.configure({    layoutTemplate: 'layout',    loadingTemplate: 'loading',    notFoundTemplate: 'notFound',    waitOn: function () {            return Meteor.subscribe('notifications');    }});Router.route('/posts/:_id', {    name: 'postPage',    data: function () { return Posts.findOne(this.params._id);},    waitOn: function () {        return [            Meteor.subscribe('comments', this.params._id),            Meteor.subscribe('singlePost', this.params._id)        ];    }});Router.route('/posts/:_id/edit',{    name: 'postEdit',    data: function () { return Posts.findOne(this.params._id); },    waitOn: function () {        return  Meteor.subscribe('singlePost', this.params._id);    }});Router.route('/submit', {name: 'postSubmit'});PostsListController = RouteController.extend({    template: 'postsList',    increment: 5,    postsLimit: function () {        return parseInt(this.params.postLimit) || this.increment;    },    findOptions: function () {        return {sort: this.sort, limit: this.postsLimit()}    },    subscriptions: function () {        this.postSub = Meteor.subscribe('posts', this.findOptions());    },    posts: function () {        return Posts.find({}, this.findOptions());    },    data: function () {        var hasMore = this.posts().count() === this.postsLimit();        var nextPath = this.route.path({postLimit: this.postsLimit() + this.increment});        return {            posts: this.posts(),            ready: this.postSub.ready,            nextPath: hasMore ? this.nextPath() : null        }    }});NewPostsController = PostsListController.extend({    sort: {submitted: -1, _id: -1},    nextPath: function () {        return Router.routes.newPosts.path({postLimit: this.postsLimit() + this.increment})    }});BestPostsController = PostsListController.extend({    sort: {votes: -1, submitted: -1, _id: -1},    nextPath: function () {        return Router.routes.bestPosts.path({postLimit: this.postsLimit() + this.increment})    }});Router.route('/',{    name: 'home',    controller: NewPostsController});Router.route('/new/:postLimit?', {name: 'newPosts'});Router.route('/best/:postLimit?', {name: 'bestPosts'});Router.onBeforeAction('dataNotFound', {only: 'postPage'});Router.onBeforeAction(requireLogin, {only: 'postSubmit'});function requireLogin(){    if(!Meteor.user()){        if(Meteor.loggingIn()){            this.render(this.loadingTemplate)        } else {            this.render('accessDenied');        }    } else {        this.next();    }}